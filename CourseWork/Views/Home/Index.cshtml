@model IEnumerable<CourseWork.Models.WhoreViewModel>
@{
    ViewBag.Title = "Home Page";
}

@*<div class="jumbotron">
    <h1>ASP.NET</h1>
    <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
    <p><a href="https://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>*@

<style>
    .cont {
        width: 93%;
        max-width: 350px;
        text-align: center;
        margin: 1% auto;
        padding: 30px 0;
        background: #111;
        color: #EEE;
        border-radius: 5px;
        border: thin solid #444;
        overflow: hidden;
    }


    div.stars {
        width: 200px;
        display: inline-block;
    }

    input.star {
        display: none;
    }

    label.star {
        float: right;
        padding: 5px;
        font-size: 120%;
        color: #444;
        transition: all .2s;
    }

    input.star:checked ~ label.star:before {
        content: '\f005';
        color: #FD4;
        transition: all .25s;
    }


    input.star-5:checked ~ label.star:before {
        color: #FE7;
        text-shadow: 0 0 20px #952;
    }

    input.star-1:checked ~ label.star:before {
        color: #F62;
    }

    label.star:hover {
        transform: rotate(-15deg) scale(1.3);
    }

    label.star:before {
        content: '\f006';
        font-family: FontAwesome;
    }

    .rev-box {
        overflow: hidden;
        height: 0;
        width: 100%;
        transition: all .25s;
    }

    textarea.review {
        background: #222;
        border: none;
        width: 100%;
        max-width: 100%;
        height: 100px;
        padding: 10px;
        box-sizing: border-box;
        color: #EEE;
    }

    label.review {
        display: block;
        transition: opacity .25s;
    }



    input.star:checked ~ .rev-box {
        height: 125px;
        overflow: visible;
    }

</style>

<div class="row">
    @foreach (var item in Model)
    {
    <div class="whore col-md-4 col-lg-3 col-sm-6 col-xs-9 m-5">
        <img class="whore-img" src="~/Images/@item.ImageUrl" alt="Alternate Text" />
        <h3>@item.UserName</h3>
        <input type="text" name="ratingTxt" value="@item.Rating" class="hidden" />
        <div class="stars">
            <form action="">
                <input class="star star-5" id="star-5" type="radio" name="star" disabled />
                <label class="star star-5" for="star-5"></label>
                <input class="star star-4" id="star-4" type="radio" name="star" disabled/>
                <label class="star star-4" for="star-4"></label>
                <input class="star star-3" id="star-3" type="radio" name="star" disabled/>
                <label class="star star-3" for="star-3"></label>
                <input class="star star-2" id="star-2" type="radio" name="star" disabled/>
                <label class="star star-2" for="star-2"></label>
                <input class="star star-1" id="star-1" type="radio" name="star" disabled/>
                <label class="star star-1" for="star-1"></label>
            </form>
        </div>
        <h4 class="whore-price">@item.PricePerHour $</h4>
        @Html.ActionLink("Order", "Order", routeValues: new { id = item.UserID }, htmlAttributes: new { @class = "whore-order-btn btn" })
    </div>

    }

</div>

<script>
    function onLoad() {
        let list = document.getElementsByName("ratingTxt");
        for (let i = 0; i < list.length; i++) {
            const elem = list[i];
            let ancestor = elem.closest("div");

            let form = ancestor.find(".stars").find("form");

            let children = form.children();
            for (let j = 0; j < children.length; j++) {
                const child = children[i];
                alert(child.getAttribute("name"));
                //if (child.getAttribute("name") == "star" && child.className == "star star-" + parseInt(elem.value)) {
                //    child.checked = true;
                //}
            }
        }
    }

    onLoad();
</script>
